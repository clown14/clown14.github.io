<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Onion&#39;blog</title>
  <subtitle>write onece use anywhere</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-01T13:55:06.404Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>onion</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mybatis学习笔记（一）</title>
    <link href="http://yoursite.com/2017/02/01/Mybatis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2017/02/01/Mybatis学习笔记（一）/</id>
    <published>2017-02-01T12:33:13.000Z</published>
    <updated>2017-02-01T13:55:06.404Z</updated>
    
    <content type="html"><![CDATA[<p>jdbc问题总结 &amp;&amp; Mybatis简介<br><a id="more"></a></p>
<h2 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h2><h3 id="jdbc实现步骤："><a href="#jdbc实现步骤：" class="headerlink" title="jdbc实现步骤："></a>jdbc实现步骤：</h3><ul>
<li>加载数据库驱动</li>
<li>创建并获取数据源连接</li>
<li>创建jdbc的statement对象</li>
<li>设置sql语句</li>
<li>设置statement中的sql参数(statement的参数注入)</li>
<li>statement执行sql语句</li>
<li>对sql执行结果进行解析处理</li>
<li>释放资源(statement,connection,resultSet)</li>
</ul>
<h3 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h3><ul>
<li>数据库连接，使用时就创建，不使用立即释放，对数据库进行频繁连接开启和关闭，造成数据库资源浪费，影响数据库性能。</li>
<li>我们使用JDBC进行操作数据库时，SQL语句基本都散落在各个JAVA类中，这样有三个不足之处：<br>第一，可读性很差，不利于维护以及做性能调优。<br>第二，改动Java代码需要重新编译、打包部署。<br>第三，不利于取出SQL在数据库客户端执行（取出后还得删掉中间的Java代码，编写好的SQL语句写好后还得通过＋号在Java进行拼凑）。 </li>
<li>很多情况下，我们都可以通过在SQL语句中设置占位符来达到使用传入参数的目的，这种方式本身就有一定局限性，它是按照一定顺序传入参数的，要与占位符一一匹配。</li>
<li>从resutSet中遍历结果集数据时，存在硬编码，将获取表的字段进行硬编码，不利于系统维护。</li>
<li>存在sql重复问题，不利于维护。</li>
</ul>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcTest</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="comment">//数据库连接</span></div><div class="line">        Connection connection = <span class="keyword">null</span>;</div><div class="line">        <span class="comment">//预编译的Statement，使用预编译的Statement提高数据库性能</span></div><div class="line">        PreparedStatement preparedStatement = <span class="keyword">null</span>;</div><div class="line">        <span class="comment">//结果集</span></div><div class="line">        ResultSet resultSet = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">//加载数据库驱动</span></div><div class="line">            Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</div><div class="line">            <span class="comment">//通过驱动管理类获取数据库链接</span></div><div class="line">            connection =  DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/mybatis001?characterEncoding=utf-8"</span>, <span class="string">"root"</span>, <span class="string">"mysql"</span>);</div><div class="line">            <span class="comment">//定义sql语句 ?表示占位符</span></div><div class="line">            String sql = <span class="string">"select * from user where username = ?"</span>;</div><div class="line">            <span class="comment">//获取预处理statement</span></div><div class="line">            preparedStatement = connection.prepareStatement(sql);</div><div class="line">            <span class="comment">//设置参数，第一个参数为sql语句中参数的序号（从1开始），第二个参数为设置的参数值</span></div><div class="line">            preparedStatement.setString(<span class="number">1</span>, <span class="string">"王五"</span>);</div><div class="line">            <span class="comment">//向数据库发出sql执行查询，查询出结果集</span></div><div class="line">            resultSet =  preparedStatement.executeQuery();</div><div class="line">            <span class="comment">//遍历查询结果集</span></div><div class="line">            <span class="keyword">while</span>(resultSet.next())&#123;</div><div class="line">                System.out.println(resultSet.getString(<span class="string">"id"</span>)+<span class="string">"  "</span>+resultSet.getString(<span class="string">"username"</span>));</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;<span class="keyword">finally</span>&#123;</div><div class="line">            <span class="comment">//释放资源</span></div><div class="line">            <span class="keyword">if</span>(resultSet!=<span class="keyword">null</span>)&#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    resultSet.close();</div><div class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</div><div class="line">                    <span class="comment">// TODO Auto-generated catch block</span></div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(preparedStatement!=<span class="keyword">null</span>)&#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    preparedStatement.close();</div><div class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</div><div class="line">                    <span class="comment">// TODO Auto-generated catch block</span></div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(connection!=<span class="keyword">null</span>)&#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    connection.close();</div><div class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</div><div class="line">                    <span class="comment">// TODO Auto-generated catch block</span></div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h2><h3 id="什么是Mybatis"><a href="#什么是Mybatis" class="headerlink" title="什么是Mybatis"></a>什么是Mybatis</h3><ul>
<li>mybatis是一个持久层的框架，是apache下的顶级项目。</li>
<li>mybatis托管到goolecode下，再后来托管到github下(<a href="https://github.com/mybatis/mybatis-3/releases)。" target="_blank" rel="external">https://github.com/mybatis/mybatis-3/releases)。</a></li>
<li>mybatis让程序将主要精力放在sql上，通过mybatis提供的映射方式，自由灵活生成（半自动化，大部分需要程序员编写sql）满足需要sql语句。</li>
<li>mybatis通过xml或注解的方式将要执行的各种statement（statement、preparedStatemnt、CallableStatement）配置起来，并通过java对象和statement中的sql进行映射生成最终执行的sql语句，最后由mybatis框架执行sql并将结果映射成java对象并返回。</li>
</ul>
<h3 id="框架图"><a href="#框架图" class="headerlink" title="框架图"></a>框架图</h3><p><img src="/img/mybatis_框架图.png" alt="图片名称" title=""></p>
<ul>
<li>mybatis配置<br>SqlMapConfig.xml，此文件作为mybatis的全局配置文件，配置了mybatis的运行环境等信息。<br>mapper.xml文件即sql映射文件，文件中配置了操作数据库的sql语句。此文件需要在SqlMapConfig.xml中加载。</li>
<li>通过mybatis环境等配置信息构造SqlSessionFactory即会话工厂</li>
<li>由会话工厂创建sqlSession即会话，操作数据库需要通过sqlSession进行。</li>
<li>mybatis底层自定义了Executor执行器接口操作数据库，Executor接口有两个实现，一个是基本执行器、一个是缓存执行器。</li>
<li>Mapped Statement也是mybatis一个底层封装对象，它包装了mybatis配置信息及sql映射信息等。mapper.xml文件中一个sql对应一个Mapped Statement对象，sql的id即是Mapped statement的id。</li>
<li>Mapped Statement对sql执行输入参数进行定义，包括HashMap、基本类型、pojo，Executor通过Mapped Statement在执行sql前将输入的java对象映射至sql中，输入参数映射就是jdbc编程中对preparedStatement设置参数。</li>
<li>Mapped Statement对sql执行输出结果进行定义，包括HashMap、基本类型、pojo，Executor通过Mapped Statement在执行sql后将输出结果映射至java对象中，输出结果映射过程相当于jdbc编程中对结果的解析处理过程。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;jdbc问题总结 &amp;amp;&amp;amp; Mybatis简介&lt;br&gt;
    
    </summary>
    
      <category term="Mybatis" scheme="http://yoursite.com/categories/Mybatis/"/>
    
    
      <category term="Mybatis" scheme="http://yoursite.com/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>算法导论笔记（五）</title>
    <link href="http://yoursite.com/2017/01/19/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89/"/>
    <id>http://yoursite.com/2017/01/19/算法导论笔记（五）/</id>
    <published>2017-01-19T14:24:09.000Z</published>
    <updated>2017-01-20T06:49:17.292Z</updated>
    
    <content type="html"><![CDATA[<p>Depth-First-Search<br><a id="more"></a></p>
<h3 id="DFS-G"><a href="#DFS-G" class="headerlink" title="DFS(G)"></a>DFS(G)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> each vertex u∈G.V 图G=(V,E)</div><div class="line">&#123;</div><div class="line">  u.color=WHITE</div><div class="line">  u.π=NULL	（u前驱</div><div class="line">&#125;</div><div class="line">time=0</div><div class="line"><span class="keyword">for</span> each vertex u∈G.V</div><div class="line">&#123;</div><div class="line">  <span class="keyword">if</span>(u.color==WHITE)</div><div class="line">  &#123;</div><div class="line">    DFS-VISIT(G,u)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="DFS-VISIT-G-u"><a href="#DFS-VISIT-G-u" class="headerlink" title="DFS-VISIT(G,u)"></a>DFS-VISIT(G,u)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">time++</div><div class="line">u.d=time (发现时间</div><div class="line">u.color=GRAY</div><div class="line"><span class="keyword">for</span> each v∈G:Adj[u]  (邻接链表</div><div class="line">&#123;</div><div class="line">  <span class="keyword">if</span>(v.color==WHITE)</div><div class="line">  &#123;</div><div class="line">    v.π=u</div><div class="line">    DFS-VISIT(G,v)</div><div class="line">  &#125;</div><div class="line">&#125; </div><div class="line">u.color=BLCAK</div><div class="line">time++</div><div class="line">u.f=time (结束时间</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Depth-First-Search&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法导论笔记（四）</title>
    <link href="http://yoursite.com/2017/01/16/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>http://yoursite.com/2017/01/16/算法导论笔记（四）/</id>
    <published>2017-01-16T07:33:54.000Z</published>
    <updated>2017-01-20T06:35:41.435Z</updated>
    
    <content type="html"><![CDATA[<p>Queue &amp;&amp; Breadth-First-Search<br><a id="more"></a></p>
<h3 id="Queue（队列）"><a href="#Queue（队列）" class="headerlink" title="Queue（队列）"></a>Queue（队列）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">Enqueue(Q,x) （进栈）</div><div class="line"><span class="keyword">if</span>(Q.head==Q.tail+1)</div><div class="line">&#123;</div><div class="line">  error <span class="string">"overflow"</span></div><div class="line">&#125;<span class="keyword">else</span></div><div class="line">&#123;</div><div class="line">  Q.[Q.tail]=x</div><div class="line">  <span class="keyword">if</span>(Q.tail==Q.length)</div><div class="line">  &#123;</div><div class="line">    e.tail=1</div><div class="line">  &#125;<span class="keyword">else</span></div><div class="line">  Q.tail++</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">Dequeue(Q) （出栈）</div><div class="line"><span class="keyword">if</span>(Q.head==Q.tail)</div><div class="line">&#123;</div><div class="line">  error <span class="string">"underflow"</span></div><div class="line">&#125;<span class="keyword">else</span></div><div class="line">&#123;</div><div class="line">  x=Q.[Q.head]</div><div class="line">  <span class="keyword">if</span>(Q.head==Q.length)</div><div class="line">  &#123;</div><div class="line">    e.head=1</div><div class="line">  &#125;<span class="keyword">else</span></div><div class="line">  Q.head++</div><div class="line">  <span class="built_in">return</span> x</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Breadth-First-Search（广度优先）"><a href="#Breadth-First-Search（广度优先）" class="headerlink" title="Breadth-First-Search（广度优先）"></a>Breadth-First-Search（广度优先）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> each vertex u∈G.V-&#123;s&#125; 图G=(V,E)</div><div class="line">&#123;</div><div class="line">  u.color=WHITE</div><div class="line">  u.d=∞		（s至u的距离</div><div class="line">  u.π=NULL	（u前驱</div><div class="line">&#125;</div><div class="line">s.color=GRAY</div><div class="line">s.d=0</div><div class="line">s.π=NULL</div><div class="line">Q=Φ </div><div class="line">Enqueue(Q,s)</div><div class="line"><span class="keyword">while</span>(Q!=Φ )</div><div class="line">&#123;</div><div class="line">  u=Dequeue(Q)</div><div class="line">  <span class="keyword">for</span> each v∈G.Adj[u]	（邻接链表</div><div class="line">  &#123;</div><div class="line">    <span class="keyword">if</span>(v.color==WHITE)</div><div class="line">    &#123;</div><div class="line">      v.color=GRAY</div><div class="line">      v.d=u.d+1</div><div class="line">      v.π=u</div><div class="line">      Enqueue(Q,v)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  u.color=BLACK</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Queue &amp;amp;&amp;amp; Breadth-First-Search&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法导论笔记（三）</title>
    <link href="http://yoursite.com/2017/01/13/%E7%AE%97%E6%B3%953/"/>
    <id>http://yoursite.com/2017/01/13/算法3/</id>
    <published>2017-01-13T08:02:10.000Z</published>
    <updated>2017-01-13T08:24:30.576Z</updated>
    
    <content type="html"><![CDATA[<p>Quick-Sort &amp;&amp; Stack<br><a id="more"></a></p>
<h3 id="Quick-Sort（快速）"><a href="#Quick-Sort（快速）" class="headerlink" title="Quick-Sort（快速）"></a>Quick-Sort（快速）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">PARTITION(A,p,r)</div><div class="line">x=A[r]</div><div class="line">r=p-1</div><div class="line"><span class="keyword">for</span>(j=p; j&lt;r; j++)</div><div class="line">&#123;</div><div class="line">  <span class="keyword">if</span>(A[j]&lt;=x)</div><div class="line">  &#123;</div><div class="line">    i++</div><div class="line">    exchange A[i] with A[j]</div><div class="line">  &#125;	</div><div class="line">&#125; </div><div class="line">exchange A[i+1] with A[r]</div><div class="line"><span class="built_in">return</span> i+1</div></pre></td></tr></table></figure>
<h3 id="Stack（栈）"><a href="#Stack（栈）" class="headerlink" title="Stack（栈）"></a>Stack（栈）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">Stack-Empty(s) (置空)</div><div class="line"><span class="keyword">if</span>(s.top==0)</div><div class="line">&#123;</div><div class="line">  <span class="built_in">return</span> True</div><div class="line">&#125;<span class="keyword">else</span> </div><div class="line"><span class="built_in">return</span> False</div><div class="line"></div><div class="line"></div><div class="line">Push(s,x) (进栈)</div><div class="line">s[s.top++]=x</div><div class="line"></div><div class="line"></div><div class="line">Pop(s) (出栈)</div><div class="line"><span class="keyword">if</span>(Stack-Empty(s))</div><div class="line">&#123;</div><div class="line">  error <span class="string">"underflow"</span></div><div class="line">&#125;<span class="keyword">else</span> </div><div class="line">s.top--</div><div class="line"><span class="built_in">return</span> s.[s.top++]</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Quick-Sort &amp;amp;&amp;amp; Stack&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法导论笔记（二）</title>
    <link href="http://yoursite.com/2017/01/10/%E7%AE%97%E6%B3%952/"/>
    <id>http://yoursite.com/2017/01/10/算法2/</id>
    <published>2017-01-10T09:49:28.000Z</published>
    <updated>2017-01-13T08:51:34.284Z</updated>
    
    <content type="html"><![CDATA[<p>Find-Maxing-Crossing-Subarray &amp;&amp; Min-Heapify<br><a id="more"></a></p>
<h3 id="Find-Maxing-Crossing-Subarray（最大子数组）"><a href="#Find-Maxing-Crossing-Subarray（最大子数组）" class="headerlink" title="Find-Maxing-Crossing-Subarray（最大子数组）"></a>Find-Maxing-Crossing-Subarray（最大子数组）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">A(low,mid,high)</div><div class="line">leftsum=-∞</div><div class="line">sum=0</div><div class="line"><span class="keyword">for</span>(i=mid; i&gt;low; i--)</div><div class="line">&#123;</div><div class="line">  sum=sum+A[i]</div><div class="line">  <span class="keyword">if</span>(sum&gt;leftsum)</div><div class="line">  &#123;</div><div class="line">    leftsum=sum</div><div class="line">    maxleft=i</div><div class="line">  &#125;	</div><div class="line">&#125; </div><div class="line">rightsum=-∞</div><div class="line">sum=0</div><div class="line"><span class="keyword">for</span>(j=mid+1; j&lt;high; j++)</div><div class="line">&#123;</div><div class="line">  sum=sum+A[j]</div><div class="line">  <span class="keyword">if</span>(sum&gt;rightsum)</div><div class="line">  &#123;</div><div class="line">    rightsum=sum</div><div class="line">    maxright=j</div><div class="line">  &#125; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Min-Heapify（最小堆）"><a href="#Min-Heapify（最小堆）" class="headerlink" title="Min-Heapify（最小堆）"></a>Min-Heapify（最小堆）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">M<span class="keyword">in</span>-HEAPIFY(A,i)</div><div class="line">l=LEFT(i)</div><div class="line">r=RIGHT(i)</div><div class="line"><span class="keyword">if</span>(l&lt;=A.heapsize &amp;&amp; A[l]&lt;A[i])</div><div class="line">&#123;</div><div class="line">  smallest=l</div><div class="line">&#125;<span class="keyword">else</span></div><div class="line">&#123;</div><div class="line">  smallest=i</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(r&lt;=A.heapsize &amp;&amp; A[r]&lt;A[smallest])</div><div class="line">&#123;</div><div class="line">  smallest=r</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(smallest!=i)</div><div class="line">&#123;</div><div class="line">  exchange A[i] with A[smallest]</div><div class="line">  M<span class="keyword">in</span>-HEAPIFY(A,smallest)</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Find-Maxing-Crossing-Subarray &amp;amp;&amp;amp; Min-Heapify&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法导论笔记（一）</title>
    <link href="http://yoursite.com/2017/01/08/%E7%AE%97%E6%B3%951/"/>
    <id>http://yoursite.com/2017/01/08/算法1/</id>
    <published>2017-01-08T08:20:11.000Z</published>
    <updated>2017-01-13T08:03:56.500Z</updated>
    
    <content type="html"><![CDATA[<p>Insertion-Sort &amp;&amp; Merge-Sort<br><a id="more"></a></p>
<h3 id="Insertion-Sort（插入）"><a href="#Insertion-Sort（插入）" class="headerlink" title="Insertion-Sort（插入）"></a>Insertion-Sort（插入）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">A[]=&#123;5,2,4,6,1,3&#125;</div><div class="line"><span class="keyword">for</span>(j=2; j&lt;A.length; j++)</div><div class="line">&#123;</div><div class="line">  key= A[j]</div><div class="line">  i=j-1</div><div class="line">  <span class="keyword">while</span>(i&gt;0 &amp;&amp; A[i]&gt;key)</div><div class="line">  &#123;   </div><div class="line">  	A[i+1]= A[i]</div><div class="line">      i=i-1   </div><div class="line">  &#125;</div><div class="line">  A[i+1]=key</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Merge-Sort（分治）"><a href="#Merge-Sort（分治）" class="headerlink" title="Merge-Sort（分治）"></a>Merge-Sort（分治）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">A[]=&#123;5,2,4,6,1,3&#125;</div><div class="line">q=1/2A.length</div><div class="line">n1=q,n2=A.length-q+1</div><div class="line"><span class="keyword">for</span>(i=0; i&lt;n1; i++)</div><div class="line">&#123;</div><div class="line">  L[i]=A[i];</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span>(j=0; j&lt;n2; j++)</div><div class="line">&#123;</div><div class="line">  R[j]=A[j+q];</div><div class="line">&#125;</div><div class="line">L[n1+1]= ∞</div><div class="line">R[n1+1]= ∞ </div><div class="line">i=j=1</div><div class="line"><span class="keyword">for</span>(k=0; k&lt;A.length; k++)</div><div class="line">&#123;</div><div class="line">  <span class="keyword">if</span>(L[i]&lt;=R[j])</div><div class="line">  &#123;</div><div class="line">      A[k]=L[i]</div><div class="line">      i=i+1</div><div class="line">  &#125;<span class="keyword">else</span>&#123;</div><div class="line">      A[k]=R[j]</div><div class="line">      j=j+1</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Insertion-Sort &amp;amp;&amp;amp; Merge-Sort&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>hexo+git部署博客</title>
    <link href="http://yoursite.com/2016/10/08/hexo-git%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2016/10/08/hexo-git部署博客/</id>
    <published>2016-10-08T14:13:57.000Z</published>
    <updated>2017-01-13T08:51:05.844Z</updated>
    
    <content type="html"><![CDATA[<p>简单介绍一下我搭建这个博客的心得。</p>
<a id="more"></a>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>首先，我是在windows上搭建的博客(才不是没钱买mac)。<br>安装Git,Node.js具体安装百度即可。<br>安装上面两个之后就可以利用npm命令来安装hexo，执行下面这条命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo -g</div></pre></td></tr></table></figure>
<h3 id="初始化生成博客"><a href="#初始化生成博客" class="headerlink" title="初始化生成博客"></a>初始化生成博客</h3><p>初始化Hexo博客只需进入博客目录，执行下面这条命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div></pre></td></tr></table></figure>
<p>初始化博客之后博客目录下会产生一些配置文件和模板文件，现在就要利用这些模板文件来生成我们的静态博客文件，通过下面这条命令就可以生成我们的博客。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<h3 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h3><p>生成博客之后我们就可以开始在本地部署我们的博客，执行下面这条命令。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>现在打开浏览器访问<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 就可以看到我们的博客了。</p>
<h3 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h3><p>通过上面这些步骤我们只是在本地搭建起了博客，要让别人看到还需要把它部署到GitHub上。<br>首先，当然是需要申请一个GitHub账号，然后新建一个Repository，接着在命名的时候需要注意，GitHubPage的名字必须用户名.github.com或者用户名.github.io。<br>创建完Repository之后，我们要配置Hexo的github地址然后才可以把我们的博客部署到GitHub上面。在博客目录底下打开_congig.yml，这就是Hexo的配置文件。找到下面这段代码：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$   <span class="comment"># Deployment</span></div><div class="line">    <span class="comment">## Docs: http://hexo.io/docs/deployment.html</span></div><div class="line">    deploy:</div><div class="line">    <span class="built_in">type</span>:</div></pre></td></tr></table></figure>
<p>把上面的内容替换成你刚才创建的Repository地址，如下:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$   <span class="comment"># Deployment</span></div><div class="line">    <span class="comment">## Docs: http://hexo.io/docs/deployment.html</span></div><div class="line">    deploy:</div><div class="line">    <span class="built_in">type</span>: github</div><div class="line">    repository: https://github.com/用户名/用户名.github.io.git</div><div class="line">    branch: master</div></pre></td></tr></table></figure>
<p>创建Repository并且修改配置文件之后我们就可以把我们的博客部署到GitHub上面了，通过下面这个命令，过程中需要输入Git账号和密码:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$  hexo deploy</div></pre></td></tr></table></figure>
<p>现在打开浏览器访问<a href="http://用户名.github.com" target="_blank" rel="external">http://用户名.github.com</a> 或者 <a href="http://用户名.github.io" target="_blank" rel="external">http://用户名.github.io</a> ，部署之后大约十分钟就可以看到博客效果了。</p>
<p>关于Git,具体可以看廖雪峰的<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">教程</a>。这里有一点说一下，安装完成后要配置username，usermail，注意设置完是没有任何显示的，我一开始以为是自己的问题，其实并不是。</p>
<p>一开始我是大体是照着这个<a href="http://jingyan.baidu.com/article/d8072ac47aca0fec95cefd2d.html" target="_blank" rel="external">百度经验</a>搭建的。</p>
<p>安装完博客之后开始考虑优化，可以参考<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="external">这里</a>，只要到Hexo目录下从Git克隆代码，具体操作参照N<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">ext使用手册</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简单介绍一下我搭建这个博客的心得。&lt;/p&gt;
    
    </summary>
    
      <category term="个人博客" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>My first blog</title>
    <link href="http://yoursite.com/2016/09/25/my-first-blog/"/>
    <id>http://yoursite.com/2016/09/25/my-first-blog/</id>
    <published>2016-09-25T14:19:05.000Z</published>
    <updated>2017-01-09T09:04:24.618Z</updated>
    
    <content type="html"><![CDATA[<h1 id="My-first-blog"><a href="#My-first-blog" class="headerlink" title="My first blog."></a>My first blog.</h1><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World!"></a>Hello World!</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;My-first-blog&quot;&gt;&lt;a href=&quot;#My-first-blog&quot; class=&quot;headerlink&quot; title=&quot;My first blog.&quot;&gt;&lt;/a&gt;My first blog.&lt;/h1&gt;&lt;h2 id=&quot;Hello-World&quot;&gt;&lt;a hre
    
    </summary>
    
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/09/14/hello-world/"/>
    <id>http://yoursite.com/2016/09/14/hello-world/</id>
    <published>2016-09-14T12:23:51.018Z</published>
    <updated>2017-01-09T09:03:54.898Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
